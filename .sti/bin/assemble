#!/bin/bash -l

source /etc/profile.d/rvm.sh

function rake_assets_precompile() {
  [ -n "$DISABLE_ASSET_COMPILATION" ] && return
  [ ! -f Gemfile ] && return
  [ ! -f Rakefile ] && return
  ! grep " rails " Gemfile.lock >/dev/null && return
  ! grep " execjs " Gemfile.lock >/dev/null && return
  ! bundle exec 'rake -T' | grep "assets:precompile" >/dev/null && return

  echo "---> Starting asset compilation."
  bundle exec rake assets:precompile
}

set -e

export RACK_ENV=${RACK_ENV:-"production"}
export RAILS_ENV=${RAILS_ENV:-"${RACK_ENV}"}

echo "---> Installing application source"
cp -Rf /tmp/src/. ./

RBVERSION=2.2.2

if [ -f Gemfile ]; then

 RBVERSION=`grep -E "^ruby.*'$" Gemfile | awk '{ print $2 }' | tr -d \'`

 if [ $RBVERSION ]; then
    echo "The version of Ruby found in Gemfile is $RBVERSION"
 else
    echo "Required Ruby version was not specified in Gemfile, using default 2.2.2"
    rvm use default
 fi

 if [ $RBVERSION ]; then
   if [ $RBVERSION = "2.0.0" -o $RBVERSION = "2.1.5" -o $RBVERSION = "2.2.2" ]; then
       rvm use $RBVERSION
   else
       echo "Ruby version specified in Gemfile isn't supported, valid versions are 2.00, 2.1.5 and 2.2.2, using default 2.2.2"
       rvm use default
   fi
 fi
else
    echo "Gemfile does not exists, unable to identify App's required Ruby version, using default 2.2.2"
    rvm use default
fi

echo "---> Building your Ruby application from source"
if [ -f Gemfile ]; then
  ADDTL_BUNDLE_ARGS=""
  if [ -f Gemfile.lock ]; then
    ADDTL_BUNDLE_ARGS="--deployment"
  fi

  if [[ "$RAILS_ENV" == "development" || "$RACK_ENV" == "development" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"test"}
  elif [[ "$RAILS_ENV" == "test" || "$RACK_ENV" == "test" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development"}
  else
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development:test"}
  fi

  echo "---> Running 'bundle install ${ADDTL_BUNDLE_ARGS}'"
  bundle install --path ./bundle ${ADDTL_BUNDLE_ARGS}

  echo "---> Cleaning up unused ruby gems"
  bundle clean -V
fi

if [[ "$RAILS_ENV" == "production" || "$RACK_ENV" == "production" ]]; then
  rake_assets_precompile
fi


# Make the ./tmp folder world writeable as Rails or other frameworks might use
# it to store temporary data (uploads/cache/sessions/etcd).
# The ./db folder has to be writeable as well because when Rails complete the
# migration it writes the schema version into ./db/schema.db
set +e
[[ -d ./tmp ]] && chmod -R go+rw ./tmp
[[ -d ./db ]] && chmod -R go+rw ./db
set -e
